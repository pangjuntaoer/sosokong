<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="depaItem">

<insert id="insertIntoUserItem" parameterType="java.util.List">
	INSERT IGNORE userItem 
	(	
        user_id,
        item_id,
        rating,
        tast,
        environment,
        service,
        times,
        review,
        user_pic,
        recommend,
        user_name,
        user_rank
	)
   	values 
    <foreach collection="list" index="index" item="item" separator=","> 
	(
        #{item.userId,jdbcType=VARCHAR},
        #{item.itemId,jdbcType=VARCHAR},
        #{item.rating,jdbcType=FLOAT},
        #{item.tast,jdbcType=FLOAT},
        #{item.environment,jdbcType=FLOAT},
        #{item.service,jdbcType=FLOAT},
        #{item.times,jdbcType=VARCHAR},
        #{item.review,jdbcType=VARCHAR},
        #{item.userPic,jdbcType=VARCHAR},
        #{item.recommend,jdbcType=VARCHAR},
        #{item.userName,jdbcType=VARCHAR},
        #{item.userRank,jdbcType=FLOAT},
	)
    </foreach>
</insert>
<insert id="insertIntoItem" parameterType="java.util.List">
	INSERT IGNORE item 
	(	
        item_id,
        name,
        star,
        cost,
        tast,
        environment,
        service,
        review_count,
        item_pic,
        item_info,
        item_key_word
	)
   	values 
    <foreach collection="list" index="index" item="item" separator=","> 
	(
        #{item.itemId,jdbcType=VARCHAR},
        #{item.name,jdbcType=VARCHAR},
        #{item.star,jdbcType=FLOAT},
        #{item.cost,jdbcType=FLOAT},
        #{item.tast,jdbcType=FLOAT},
        #{item.environment,jdbcType=FLOAT},
        #{item.service,jdbcType=FLOAT},
        #{item.reviewCount,jdbcType=VARCHAR},
        #{item.itemPic,jdbcType=VARCHAR},
        #{item.itemInfo,jdbcType=VARCHAR},
        #{item.itemKeyWord,jdbcType=VARCHAR},
	)
    </foreach>
</insert>    

<select id="selectTraindata" resultType="com.swust.app.DataModel">
select 
t.user_id as userId,
t.item_id as itemId,
t.service as rating,
t.times as date,
i.name as itemName
from
train_data t,item i
where
t.item_id=i.id
</select>

<select id="selectUsers" resultType="Long">
SELECT DISTINCT user_id FROM train_data
</select>
<select id="selectItems" resultType="Long">
SELECT DISTINCT item_id FROM train_data
</select>
</mapper>